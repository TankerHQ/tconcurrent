workflow:
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      variables:
        CONAN_REMOTE: "artifactory"
    - if: $CI_COMMIT_REF_NAME =~ /\Arelease\/.+\z/
      variables:
        CONAN_REMOTE: "artifactory"
    - when: always
      variables:
        CONAN_REMOTE: "artifactory-staging"


image: registry.gitlab.com/tankerhq/docker/native:latest

before_script:
  - poetry run python -m pip install --upgrade pip
  - poetry install

stages:
  - build
  - deploy

.build:
  stage: build
  except:
    - schedules

build/linux:
  extends: .build
  tags:
    - linux
    - compilation
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --remote $CONAN_REMOTE --profile linux-x86_64

build/macos/arm:
  extends: .build
  tags: [macos, arm]
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --remote $CONAN_REMOTE --profile macos-armv8

build/macos/x86_64:
  extends: .build
  tags: [macos, x86_64]
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --remote $CONAN_REMOTE --profile macos-x86_64

build/windows:
  extends: .build
  tags: [windows]
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --remote $CONAN_REMOTE --profile windows-x86_64

coverage:
  stage: build
  only:
    - schedules
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --coverage --remote $CONAN_REMOTE --profile linux-x86_64 debug
    - mv build/linux-debug/x86_64/Release/coverage coverage
  tags:
    - linux
    - compilation
  artifacts:
    paths:
      - coverage/
    expire_in: 7 days

pages:
  stage: deploy
  only:
    - schedules
  dependencies:
    - coverage
  script:
    - mv coverage/ public/
  artifacts:
    paths:
      - public
    expire_in: 7 days
  tags:
    - linux
